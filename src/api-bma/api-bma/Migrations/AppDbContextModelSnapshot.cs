// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_bma.Models;

#nullable disable

namespace api_bma.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_bma.Models.Beneficiario", b =>
                {
                    b.Property<int>("BeneficiarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiarioId"));

                    b.Property<int>("quantidadeDependentes")
                        .HasColumnType("int");

                    b.HasKey("BeneficiarioId");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("api_bma.Models.Dependente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeneficiarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.ToTable("Dependentes");
                });

            modelBuilder.Entity("api_bma.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"));

                    b.Property<int>("BeneficiarioId")
                        .HasColumnType("int");

                    b.Property<string>("cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("BeneficiarioId")
                        .IsUnique();

                    b.ToTable("Endereço");
                });

            modelBuilder.Entity("api_bma.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BeneficiarioId")
                        .HasColumnType("int");

                    b.Property<int?>("DependenteId")
                        .HasColumnType("int");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.HasIndex("DependenteId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("api_bma.Models.Beneficiario", b =>
                {
                    b.OwnsOne("api_bma.Models.Titularbolsafamilia", "titularBolsaFamilia", b1 =>
                        {
                            b1.Property<int>("BeneficiarioId")
                                .HasColumnType("int");

                            b1.Property<string>("nis")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("nome")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BeneficiarioId");

                            b1.ToTable("Beneficiarios");

                            b1.WithOwner()
                                .HasForeignKey("BeneficiarioId");
                        });

                    b.Navigation("titularBolsaFamilia");
                });

            modelBuilder.Entity("api_bma.Models.Dependente", b =>
                {
                    b.HasOne("api_bma.Models.Beneficiario", "Beneficiario")
                        .WithMany("dependentes")
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");
                });

            modelBuilder.Entity("api_bma.Models.Endereco", b =>
                {
                    b.HasOne("api_bma.Models.Beneficiario", "Beneficiario")
                        .WithOne("endereco")
                        .HasForeignKey("api_bma.Models.Endereco", "BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");
                });

            modelBuilder.Entity("api_bma.Models.LinkDto", b =>
                {
                    b.HasOne("api_bma.Models.Beneficiario", null)
                        .WithMany("Links")
                        .HasForeignKey("BeneficiarioId");

                    b.HasOne("api_bma.Models.Dependente", null)
                        .WithMany("Links")
                        .HasForeignKey("DependenteId");

                    b.HasOne("api_bma.Models.Endereco", null)
                        .WithMany("Links")
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("api_bma.Models.Beneficiario", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("dependentes");

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("api_bma.Models.Dependente", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("api_bma.Models.Endereco", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
